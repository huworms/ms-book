server.port=7003
server.error.include-message: always

# Strongly recommend to set this property to "none" in a production environment!
spring.jpa.hibernate.ddl-auto: update

spring.datasource.url=jdbc:mysql://172.26.32.6/review-db
spring.datasource.username=root
spring.datasource.password=hola123
spring.datasource.hikari.initializationFailTimeout: 60000

spring.cloud.function.definition= messageProcessor

spring.cloud.stream.defaultBinder= rabbit
spring.cloud.stream.default.contentType= application/json
spring.cloud.stream.bindings.messageProcessor-in-0.destination=reviews
spring.cloud.stream.bindings.messageProcessor-in-0.group= reviewsGroup

spring.cloud.stream.bindings.messageProcessor-in-0.consumer.maxAttempts= 3
spring.cloud.stream.bindings.messageProcessor-in-0.consumer.backOffInitialInterval= 500
spring.cloud.stream.bindings.messageProcessor-in-0.consumer.backOffMaxInterval= 1000
spring.cloud.stream.bindings.messageProcessor-in-0.consumer.backOffMultiplier= 2.0

spring.cloud.stream.rabbit.bindings.messageProcessor-in-0.consumer.autoBindDlq= true
spring.cloud.stream.rabbit.bindings.messageProcessor-in-0.consumer.republishToDlq=true  

spring.cloud.stream.kafka.bindings.messageProcessor-in-0.consumer.enableDlq= true

spring.cloud.stream.kafka.binder.brokers= 127.0.0.1
spring.cloud.stream.kafka.binder.defaultBrokerPort= 9092


spring.rabbitmq.host= 127.0.0.1
spring.rabbitmq.port= 5672
spring.rabbitmq.username= guest
spring.rabbitmq.password= guest

management.endpoint.health.show-details= ALWAYS
management.endpoints.web.exposure.include: "*"
  
logging.level.root=INFO
logging.level.com.hugo=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


#---
spring.config.activate.on-profile=docker
server.port=8080
spring.datasource.url=jdbc:mysql://mysql/review-db

spring.rabbitmq.host= rabbitmq

spring.cloud.stream.kafka.binder.brokers= kafka

#---
spring.config.activate.on-profile= streaming_partitioned

spring.cloud.stream.bindings.messageProcessor-in-0.consumer.partitioned= true
spring.cloud.stream.bindings.messageProcessor-in-0.consumer.instanceCount= 2

#---
spring.config.activate.on-profile= streaming_instance_0

spring.cloud.stream.bindings.messageProcessor-in-0.consumer.instanceIndex= 0

#---
spring.config.activate.on-profile= streaming_instance_1

spring.cloud.stream.bindings.messageProcessor-in-0.consumer.instanceIndex= 1

#---
spring.config.activate.on-profile= kafka

management.health.rabbit.enabled= false
spring.cloud.stream.defaultBinder= kafka
spring.kafka.bootstrap-servers= kafka:9092
spring.cloud.stream.kafka.binder.replication-factor= 1
